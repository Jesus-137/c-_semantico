Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration for_loop statement_block
Rule 2     declaration -> KEYWORD IDENTIFIER SEMICOLON
Rule 3     for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN
Rule 4     statement_block -> LBRACE statement RBRACE
Rule 5     statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

Terminals, with rules where they appear

DOT                  : 5 5
EQUALS               : 3
IDENTIFIER           : 2 3 3 3 5
KEYWORD              : 2 3 5 5 5
LBRACE               : 4
LEQ                  : 3
LPAREN               : 3 5
NUMBER               : 3 3
PLUSPLUS             : 3
RBRACE               : 4
RPAREN               : 3 5
SEMICOLON            : 2 3 3 5
error                : 

Nonterminals, with rules where they appear

declaration          : 1
for_loop             : 1
program              : 0
statement            : 4
statement_block      : 1

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration for_loop statement_block
    (2) declaration -> . KEYWORD IDENTIFIER SEMICOLON

    KEYWORD         shift and go to state 3

    program                        shift and go to state 1
    declaration                    shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration . for_loop statement_block
    (3) for_loop -> . KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    KEYWORD         shift and go to state 5

    for_loop                       shift and go to state 4

state 3

    (2) declaration -> KEYWORD . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 6


state 4

    (1) program -> declaration for_loop . statement_block
    (4) statement_block -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 8

    statement_block                shift and go to state 7

state 5

    (3) for_loop -> KEYWORD . LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    LPAREN          shift and go to state 9


state 6

    (2) declaration -> KEYWORD IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 10


state 7

    (1) program -> declaration for_loop statement_block .

    $end            reduce using rule 1 (program -> declaration for_loop statement_block .)


state 8

    (4) statement_block -> LBRACE . statement RBRACE
    (5) statement -> . KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

    KEYWORD         shift and go to state 12

    statement                      shift and go to state 11

state 9

    (3) for_loop -> KEYWORD LPAREN . IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    IDENTIFIER      shift and go to state 13


state 10

    (2) declaration -> KEYWORD IDENTIFIER SEMICOLON .

    KEYWORD         reduce using rule 2 (declaration -> KEYWORD IDENTIFIER SEMICOLON .)


state 11

    (4) statement_block -> LBRACE statement . RBRACE

    RBRACE          shift and go to state 14


state 12

    (5) statement -> KEYWORD . DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

    DOT             shift and go to state 15


state 13

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER . EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    EQUALS          shift and go to state 16


state 14

    (4) statement_block -> LBRACE statement RBRACE .

    $end            reduce using rule 4 (statement_block -> LBRACE statement RBRACE .)


state 15

    (5) statement -> KEYWORD DOT . KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

    KEYWORD         shift and go to state 17


state 16

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS . NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    NUMBER          shift and go to state 18


state 17

    (5) statement -> KEYWORD DOT KEYWORD . DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

    DOT             shift and go to state 19


state 18

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER . SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    SEMICOLON       shift and go to state 20


state 19

    (5) statement -> KEYWORD DOT KEYWORD DOT . KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON

    KEYWORD         shift and go to state 21


state 20

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON . IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    IDENTIFIER      shift and go to state 22


state 21

    (5) statement -> KEYWORD DOT KEYWORD DOT KEYWORD . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 23


state 22

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER . LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    LEQ             shift and go to state 24


state 23

    (5) statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 25


state 24

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ . NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    NUMBER          shift and go to state 26


state 25

    (5) statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 27


state 26

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER . SEMICOLON IDENTIFIER PLUSPLUS RPAREN

    SEMICOLON       shift and go to state 28


state 27

    (5) statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 29


state 28

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON . IDENTIFIER PLUSPLUS RPAREN

    IDENTIFIER      shift and go to state 30


state 29

    (5) statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON .

    RBRACE          reduce using rule 5 (statement -> KEYWORD DOT KEYWORD DOT KEYWORD LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 30

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER . PLUSPLUS RPAREN

    PLUSPLUS        shift and go to state 31


state 31

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS . RPAREN

    RPAREN          shift and go to state 32


state 32

    (3) for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN .

    LBRACE          reduce using rule 3 (for_loop -> KEYWORD LPAREN IDENTIFIER EQUALS NUMBER SEMICOLON IDENTIFIER LEQ NUMBER SEMICOLON IDENTIFIER PLUSPLUS RPAREN .)

